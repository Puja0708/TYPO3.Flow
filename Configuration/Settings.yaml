#                                                                        #
# Configuration for the FLOW3 Framework                                  #
#                                                                        #
# This file contains the default base configuration for the FLOW3        #
# Framework. Don't modify this file but add configuration options to     #
# the Settings.yaml file in the in global Configuration/ directory       #
# instead.                                                               #
#                                                                        #

TYPO3:

  FLOW3:

    aop:

      # Registers global objects to be evaluated for dynamic pointcut expressions
      globalObjects:
        securityContext: TYPO3\FLOW3\Security\Context

    configuration:

      # Enables the configuration file cache which compiles YAML files into
      # much faster to load PHP files.
      #
      # NOTE: You must clear all caches right after switching this option OFF
      compileConfigurationFiles: TRUE

    core:

      # FLOW3's application context
      # This setting is automatically set by the configuration manager and can't be set manually.
      context: ''

      # Path and filename of the PHP binary
      # The constant PHP_BINDIR usually contains the path, but on Windows this doesn't work reliably
      phpBinaryPathAndFilename: '%PHP_BINDIR%/php'

    error:

      exceptionHandler:

        # Defines the global, last-resort exception handler.
        # The specified class must implement \TYPO3\FLOW3\Error\ExceptionHandlerInterface
        className: TYPO3\FLOW3\Error\ProductionExceptionHandler

      errorHandler:

        # Defines which errors should result in an exception thrown - all other error
        # levels will be silently ignored. Only errors that can be handled in an
        # user-defined error handler are affected, of course.
        exceptionalErrors: [%E_USER_ERROR%, %E_RECOVERABLE_ERROR%]

    log:

      # Settings for FLOW3's default loggers
      systemLogger:
        backend: TYPO3\FLOW3\Log\Backend\FileBackend
        backendOptions:
           logFileURL: %FLOW3_PATH_DATA%Logs/System.log
           createParentDirectories: TRUE
           severityThreshold: %LOG_INFO%
           maximumLogFileSize: 10485760
           logFilesToKeep: 1
           logMessageOrigin: FALSE

      securityLogger:
        backend: TYPO3\FLOW3\Log\Backend\FileBackend
        backendOptions:
           logFileURL: %FLOW3_PATH_DATA%Logs/Security.log
           createParentDirectories: TRUE
           severityThreshold: %LOG_INFO%
           maximumLogFileSize: 10485760
           logFilesToKeep: 1
           logIpAddress: TRUE

    i18n:

      # The default locale identifier.
      defaultLocale: en

      # The fallback rule to use for locale resolution
      fallbackRule:
        # Strictly use the defined order (without implicit locale fallback)
        strict: FALSE
        # The locales identifiers to use in their desired order
        order: []

    mvc:

      # Object name of the controller to use if no other controller could be resolved
      # matching the request.
      notFoundController: TYPO3\FLOW3\Mvc\Controller\NotFoundController

    object:

      # If enabled, the Object Manager will - additionally to the class files found
      # in the "Classes" directory - also register class files found in the directory
      # "Tests/Functional/". Enabling this feature obviously only makes sense in a
      # testing context.
      registerFunctionalTestClasses: FALSE

    package:

      git:

        # The full path and file name of the git binary.
        gitBinary: '/usr/bin/env git'

    persistence:

      # Options for the default Doctrine persistence
      backendOptions:
        driver: 'pdo_mysql'
        host: '127.0.0.1'
        dbname: NULL
        user: NULL
        password: NULL
        charset: 'utf8'
      doctrine:
        cacheImplementation: 'Doctrine\Common\Cache\ArrayCache'
        sqlLogger: NULL
        # By default Doctrine proxy compilation is done in the FLOW3 bootstrap
        enable: TRUE

    reflection:


      # A list of tags to be ignored during reflection
      ignoredTags: ['api', 'package', 'subpackage', 'license', 'copyright', 'author', 'const', 'see', 'todo', 'scope', 'fixme', 'test', 'expectedException', 'dataProvider', 'group', 'codeCoverageIgnore']

      # If enabled, the Reflection Service notes all incorrect or inconsistent usage
      # of @param annotations in the default log.
      logIncorrectDocCommentHints: FALSE

    resource:
      publishing:

        # If enabled, the publisher will check if the static resources of active packages
        # have changed and if so publishes them again. If disabled, static package resources
        # are only published once and changes are unnoticed until the related cache is flushed.
        detectPackageResourceChanges: FALSE

        # Options for the File System publishing target
        fileSystem:

          # Strategy for mirroring files: Either "copy" or "link"
          mirrorMode: link

    security:

      enable: TRUE

      firewall:

        # If set to TRUE, the firewall will reject any request that is not
        # explicitly allowed by a configured request filter.
        rejectAll: FALSE

        # The filter configuration for the firewall. Here is an example configuration array:
        #
        # filters:
        #   -
        #     patternType:  URL
        #     patternValue: /some/url/.*
        #     interceptor:  AccessGrant
        #   -
        #     patternType:  URL
        #     patternValue: /some/url/blocked.*
        #     interceptor:  AccessDeny
        #
        # If the objects are in the namespace "\TYPO3\FLOW3\Security" it is enough to specify
        # the last name of the classname, e.g. AccessGrant
        filters:
          -
            patternType: CsrfProtection
            patternValue:
            interceptor: AccessDeny

      authentication:

        # Array of authentication providers that should be used for authentication.
        # If you define a request pattern, the provider will only be called if the pattern
        # matches the current request. If the objects are in the namespace
        # "\TYPO3\FLOW3\Security" it is sufficient to specify the last name of the classname,
        # e.g. PersistedUsernamePasswordProvider
        # Note: Authentication will be performed in the given order of the providers.
        # So make sure, that the primary authentication method is the first array entry.
        #
        # You'll need to configure your own authentication provider depending on your use case.
        # Below you find an example which uses simple username/password authentication. In
        # case the user is not logged in, the web redirect entry point, which redirects her
        # to the URI login/form/action where the login form resides.
        #
        #  AdminInterfaceProvider:
        #    provider: 'PersistedUsernamePasswordProvider'
        #    entryPoint: 'WebRedirect'
        #    entryPointOptions:
        #      uri: 'login/form/action'
        providers: []

        # One of the available authentication strategies:
        #
        #   "anyToken":
        #     Authenticate as many tokens as possible but do not require
        #     an authenticated token (e.g. for guests with role Everybody).
        #
        #   "allTokens":
        #     Authenticate all active tokens and throw an exception if
        #     an active token could not be authenticated.
        #
        #   "oneToken":
        #     Stop authentication of tokens after first successful
        #     authentication of a token. Requires an authenticated token.
        #
        #   "atLeastOneToken" (default):
        #     Authenticate as many tokens as possible but do not fail if
        #     a token could not be authenticated as long as at least one
        #     token could be authenticated.
        authenticationStrategy: atLeastOneToken

      authorization:
        # An array of access decision voters that should vote when access decisions are made
        accessDecisionVoters: [TYPO3\FLOW3\Security\Authorization\Voter\Policy]

        # If this is set to TRUE access will be granted even if all voters abstain
        allowAccessIfAllVotersAbstain: FALSE

      csrf:
        csrfStrategy: onePerSession

      cryptography:

        hashingStrategies:
          default: pbkdf2

          pbkdf2: TYPO3\FLOW3\Security\Cryptography\Pbkdf2HashingStrategy
          bcrypt: TYPO3\FLOW3\Security\Cryptography\BCryptHashingStrategy

        Pbkdf2HashingStrategy:

          # Length of the random, dynamic salt that will be stored with the hashed password
          dynamicSaltLength: 8
          # Iteration count, high enough to make brute-force attacks unfeasible, use a custom value!
          iterationCount: 10000
          # Length of the derived key (hashed password) in bytes
          derivedKeyLength: 64
          # Hash function to use for PBKDF2
          algorithm: sha256

        BCryptHashingStrategy:

          # Cost of a BCrypt operation, can be between 4 and 31
          # The faster your machine is, the higher this number should be
          cost: 14

        RSAWalletServicePHP:

          # Path to the file where RSA keys shall be stored
          # Note: This file must not be accessible by the public!
          keystorePath: %FLOW3_PATH_DATA%Persistent/RsaWalletData

          # Defines the openSSL configuration used for key handling.
          # See the PHP openSSL documentation for possible settings.
          openSSLConfiguration: []

    session:

      # Specifies the number of seconds a user must be idle before the sesssion
      # automatically expires. If set to "0", a session will never expire
      # automatically.
      inactivityTimeout: 3600

      PHPSession:

        # A specific name for the session, used in the session cookie.
        # The session name must be alphanumerical and must contain at least one
        # character – not only numbers.
        #
        # If left empty, the session name will be determined from the base URL.
        name: 'FLOW3'

        # Where to store session data in the filesystem. If this is empty, a default
        # location is used (Data/Temporary/<context>/Sessions/).
        savePath:

        # PHP default is used if one of the following parameters is empty.
        cookie:

          # Cookie lifetime in seconds
          # Note that if you want to sessions expire automatically, you should rather
          # set inactivityTimeout to the wanted value. Only in rare cases you'd want
          # some other cookie lifetime than "0".
          lifetime: 0

          # Cookie path: set this if a cookie should be only valid for a subfolder of a domain.
          path: /

          # The cookie domain. Use dot notation if cookies should be valid for
          # all subdomains.
          #domain: .domain.com

          # Force SSL cookies.
          secure: FALSE

          # Allow http access only.
          httponly: TRUE

    utility:
      environment:

        # Defines the base directory which FLOW3 may use for storing different kinds
        # of temporary files.
        # The directory must be writable and FLOW3 will automatically create a sub
        # directory (named after the context) which will contain the actual temporary files.
        temporaryDirectoryBase: %FLOW3_PATH_DATA%Temporary/

        # Defines an explicit base URI that should be used in the environment. This
        # affects resource management, routing and all other parts accessing
        # "Environment->getBaseUri()".
        #
        # If this setting is NULL, the base URI will be detected from the current
        # request (default).
        baseUri: NULL
