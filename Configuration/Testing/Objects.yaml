#                                                                        #
# Object Configuration for the FLOW3 Framework                           #
#                                                                        #
# This file contains additions to the base configuration for the FLOW3   #
# Framework when it runs in Testing context.                             #
#                                                                        #
# Don't modify this file - instead put your own additions into the       #
# global Configuration directory and its sub directories.                #
#                                                                        #

#
# For functional tests we are going to use the InternalRequestEngine by default:
#
TYPO3\FLOW3\Http\Client\Browser:
  properties:
    requestEngine:
      object: TYPO3\FLOW3\Http\Client\InternalRequestEngine

#
# Sesions should be transient in a test context:
#
TYPO3\FLOW3\Session\SessionInterface:
  className: TYPO3\FLOW3\Session\TransientSession

#
# Security and Resource handling need specialized testing classes:
#
TYPO3\FLOW3\Security\Authorization\AccessDecisionManagerInterface:
  className: TYPO3\FLOW3\Tests\Functional\Security\Authorization\TestingAccessDecisionManager

TYPO3\FLOW3\Resource\Publishing\ResourcePublishingTargetInterface:
  className: TYPO3\FLOW3\Tests\Functional\Resource\Publishing\TestingFileSystemPublishingTarget

#
# Configuration of fixture classes:
#
TYPO3\FLOW3\Tests\Functional\Object\Fixtures\SingletonClassC:
  arguments:
    1:
      value: 'this is required'
    3:
      setting: TYPO3.FLOW3.tests.functional.dependencyInjection.singletonConstructorArgument

TYPO3\FLOW3\Tests\Functional\Object\Fixtures\PrototypeClassAishInterface:
  scope: singleton
  factoryObjectName: TYPO3\FLOW3\Tests\Functional\Object\Fixtures\PrototypeClassAFactory
  arguments:
    1:
      value: 'value defined in Objects.yaml'

TYPO3\FLOW3\Tests\Functional\Object\Fixtures\PrototypeClassC:
  arguments:
    1:
      setting: TYPO3.FLOW3.tests.functional.dependencyInjection.prototypeConstructorArgument
