<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xmlns="http://docbook.org/ns/docbook"
         xmlns:ns6="http://www.w3.org/1999/xlink"
         xmlns:ns5="http://www.w3.org/2000/svg"
         xmlns:ns4="http://www.w3.org/1999/xhtml"
         xmlns:ns3="http://www.w3.org/1998/Math/MathML"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Packages</title>

  <para>FLOW3 is a package-based system. In fact, FLOW3 itself is just a
  package as well - but obviously an important one. Packages act as a
  container for many different purposes: Most of them contain PHP code which
  adds certain functionality, others only contain documentation and yet other
  packages consist of templates, images or other resources. The TYPO3 project
  hosts a package repository which acts as a convenient hub for interchanging
  FLOW3 based packages with other community members.</para>

  <note>
    <para>At the time of this writing the package repository is still in the
    planning phase.</para>
  </note>

  <section>
    <title>Files and Locations</title>

    <para>The FLOW3 package directory structure follows a certain convention
    which has the advantage that you don't need to care about any
    package-related configuration. If you put your files into the right
    directories, everything will just work.</para>

    <para>The suggested directory layout of a FLOW3 package is shown
    below:</para>

    <para><variablelist>
        <varlistentry>
          <term><filename><replaceable>[PackageName]</replaceable></filename></term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term><filename>Classes</filename></term>

                <listitem>
                  <para>This directory contains the actual source code for the
                  package. Package authors are free to add (only!) class or
                  interface files directly to this directory or add
                  subdirectories to organize the content if necessary. All
                  classes or interfaces below this directory are handled by
                  the autolading mechanism and will be registered at the
                  object manager automatically (and will thus be considered
                  "objects").</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>Configuration</filename></term>

                <listitem>
                  <para>All kinds of configuration which are delivered with
                  the package reside in this directory. The configuration
                  files are immutable and must not be changed by the user or
                  administrator. The most prominent configuration files are
                  the <filename>Objects.</filename>yaml file which may be used
                  to configure the package's objects and the
                  <filename>Settings.yaml</filename> file which contains
                  general user-level settings.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>Documentation</filename></term>

                <listitem>
                  <para>Holds the package documentation. The english (DocBook)
                  manual for example must be located in a subdirectory called
                  <filename>Manual/en/</filename>. Please refer to the
                  Documentor's Guide for more details about the directories
                  and files within this directory.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>Meta</filename></term>

                <listitem>
                  <para>A folder which provides some meta information about
                  the package.</para>

                  <variablelist>
                    <varlistentry>
                      <term><filename>Package.xml</filename></term>

                      <listitem>
                        <para>This mandatory file contains some basic
                        information about the package, such as title,
                        description, author, constraints, version number and
                        more. You should take great care to keep this
                        information updated.</para>
                      </listitem>
                    </varlistentry>
                  </variablelist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>Resources</filename></term>

                <listitem>
                  <para>Contains static resources the package needs, such as
                  library code, template files, graphics, ... In general,
                  there is a distinction between public and private resources.
                  While public resources will be mirrored into FLOW3's
                  <filename>Public </filename>directory by the Resource
                  Manager (and therefore become accessible from the web) all
                  resources in the <filename>Private</filename> directory
                  remain protected.</para>

                  <para>Although it is up to the package author to name the
                  directories, we suggest the following conventions for
                  directories below <filename>Private</filename> and
                  <filename>Public</filename>:</para>

                  <variablelist>
                    <varlistentry>
                      <term><filename>Media</filename></term>

                      <listitem>
                        <para>This directory holds images, PDF, Flash, CSS and
                        other files that will be delivered to the client
                        directly without further processing. The content of
                        the <filename>Media/Public/</filename> directory will
                        be automatically mirrored to the public file cache
                        directory by the resource manager. You're free to
                        create subdirectories as they become necessary.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term><filename>Templates</filename></term>

                      <listitem>
                        <para>Template files used by the package should go
                        here. If a user wants to modify the template it will
                        end up elsewhere and should be pointed to by some
                        configuration setting.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term><filename>PHP</filename></term>

                      <listitem>
                        <para>Should hold any PHP code that is an external
                        library which should not be handled by the object
                        manager (at least not by default), is of procedural
                        nature or doesn't belong into the classes directory
                        for any other reason.</para>
                      </listitem>
                    </varlistentry>

                    <varlistentry>
                      <term><filename>Java</filename></term>

                      <listitem>
                        <para>Should hold any Java code needed by the package.
                        Repeat and rinse for Smalltalk, Modula, Pascal, ...
                        <literal>;)</literal></para>
                      </listitem>
                    </varlistentry>
                  </variablelist>

                  <para>More directories can be added as needed.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term><filename>Tests</filename></term>

                <listitem>
                  <para>Holds the unit tests for the package. Test cases will
                  be recognized by the <package>Testing</package> package if
                  they follow the required naming convention.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>
      </variablelist></para>

    <para>As already mentioned, all classes which are found in the
    <filename>Classes</filename> directory will be detected and registered.
    However, this only works if you follow the naming rules equally for the
    classname as well as the file name. An example for a valid class name is
    <classname>F3\MyPackage\Controller\Default</classname> while the file
    containing this class would be named
    <filename>F3_MyPackage_Controller_Default.php</filename>.</para>

    <para>All details about naming files, classes, methods and variables
    correctly can be found in the FLOW3 Coding Guidelines. You're highly
    encouraged to read (and follow) them.</para>
  </section>

  <section>
    <title>Package Keys</title>

    <para>Package keys are used to uniquely identify packages and provide them
    with a namespace for different purposes. They save you from conflicts
    between packages which were provided by different parties.</para>

    <para>Any public package needs to have a unique packge key which you need
    to register at <link ns6:href="http://typo3.org">forge.typo3.org</link>
    prior to use. But even if you develop a package for private use only, it's
    clever to register a package key for it.</para>
  </section>

  <section>
    <title>Importing and Installing Packages</title>

    <para>At this time the features for import and installation of packages
    have not been implemented. The current behaviour is that all directories
    which are found below the <filename>Packages</filename> folder are assumed
    to be packages and are active by default. Just make sure that you created
    a <filename>Package.xml</filename> file in the <filename>Meta</filename>
    directory of your package.</para>
  </section>

  <section>
    <title>Package Manager</title>

    <para>The Package Manager is in charge of downloading, installing,
    configuring and activating packages and registers their objects and
    resources.</para>

    <note>
      <para>In its current form, the package manager only provides the basic
      functionality which is necessary to use packages and their objects. More
      advanced features like installing or configuring packages are of course
      planned.</para>
    </note>
  </section>

  <section>
    <title>Creating a New Package</title>

    <para>Just create the package folder and subdirectories manually and copy
    &amp; adapt a <filename>Package.xml</filename> file from one of the other
    packages. Apart from that no further steps are necessary.</para>

    <para>An alternative is to install <link
    ns6:href="http://www.dev3.org/">DEV3</link> for Eclipse and use it's
    wizard to create a package. It provides a nice editor for
    <filename>Package.xml</filename> files as well.</para>
  </section>

  <section>
    <title>Package Meta Information</title>

    <para>All packages need to provide some meta information to the package
    manager. This data is stored in a file called
    <filename>Package.xml</filename> which resides in the
    <filename>Meta</filename> directory of a package. The format of this file
    follows a RelaxNG schema which is available at <link
    ns6:href="http://typo3.org/ns/2008/flow3/package/Package.rng">http://typo3.org/ns/2008/flow3/package/Package.rng</link>.</para>

    <para>Here is an example of a valid <filename>Package.xml</filename>
    file:</para>

    <example>
      <title>Package.xml</title>

      <programlisting>
&lt;?xml version="1.0" encoding="utf-8" standalone="yes" ?&gt;
&lt;package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://typo3.org/ns/2008/flow3/package" version="1.0"&gt;
   &lt;key&gt;TestPackage&lt;/key&gt;
   &lt;title&gt;Test Package&lt;/title&gt;
   &lt;description&gt;The test package to demonstrate the features of Package.xml&lt;/description&gt;
   &lt;version&gt;0.0.1&lt;/version&gt;
   &lt;state&gt;Alpha&lt;/state&gt;
   &lt;categories&gt;
      &lt;category&gt;System&lt;/category&gt;
      &lt;category&gt;Testing&lt;/category&gt;
   &lt;/categories&gt;
   &lt;parties&gt;
      &lt;person role="LeadDeveloper"&gt;
         &lt;name&gt;David Brühlmeier&lt;/name&gt;
         &lt;email&gt;typo3@bruehlmeier.com&lt;/email&gt;
      &lt;/person&gt;
      &lt;person role="Maintainer"&gt;
         &lt;name&gt;John Smith&lt;/name&gt;
         &lt;email&gt;john@smith.com&lt;/email&gt;
         &lt;organisation&gt;Smith Ltd.&lt;/organisation&gt;
         &lt;repositoryUserName&gt;jsmith&lt;/repositoryUserName&gt;
      &lt;/person&gt;
      &lt;organisation role="Sponsor"&gt;
         &lt;name&gt;John Doe Co.&lt;/name&gt;
         &lt;email&gt;info@johndoe.com&lt;/email&gt;
         &lt;website&gt;www.johndoe.com&lt;/website&gt;
      &lt;/organisation&gt;
   &lt;/parties&gt;
   &lt;constraints&gt;
      &lt;depends&gt;
         &lt;package minVersion="1.0.0" maxVersion="1.9.9"&gt;FLOW3&lt;/package&gt;
         &lt;system type="PHP" minVersion="5.1.0" /&gt;
         &lt;system type="PHPExtension"&gt;xml&lt;/system&gt;
         &lt;system type="PHPExtension"&gt;pgsql&lt;/system&gt;
         &lt;system type="PEAR" minVersion="1.5.1"&gt;XML_RPC&lt;/system&gt;
      &lt;/depends&gt;
      &lt;conflicts&gt;
         &lt;system type="OperatingSystem"&gt;Windows_NT&lt;/system&gt;
      &lt;/conflicts&gt;
      &lt;suggests&gt;
         &lt;system type="Memory"&gt;16M&lt;/system&gt;
      &lt;/suggests&gt;
   &lt;/constraints&gt;

   &lt;!-- The following elements are only used and generated by the repository --&gt;
   &lt;repository&gt;
      &lt;downloads&gt;
         &lt;total&gt;3929&lt;/total&gt;
         &lt;thisVersion&gt;444&lt;/thisVersion&gt;
      &lt;/downloads&gt;
      &lt;uploads&gt;
         &lt;upload&gt;
            &lt;comment&gt;Just a comment...&lt;/comment&gt;
            &lt;repositoryUserName&gt;jsmith&lt;/repositoryUserName&gt;
            &lt;timestamp&gt;2008-04-22T17:23:09Z&lt;/timestamp&gt;
         &lt;/upload&gt;
         &lt;upload&gt;
            &lt;comment/&gt;
            &lt;repositoryUserName&gt;jsmith&lt;/repositoryUserName&gt;
            &lt;timestamp&gt;2008-04-19T03:54:13Z&lt;/timestamp&gt;
         &lt;/upload&gt;
      &lt;/uploads&gt;
   &lt;/repository&gt;
&lt;/package&gt;

      </programlisting>
    </example>

    <note>
      <para>If you are working with Eclipse, you might want to install the
      <link ns6:href="http://dev3.org">DEV3 Plugin</link> which - among other
      tools - provides you with a convenient Package.xml editor</para>
    </note>
  </section>
</section>